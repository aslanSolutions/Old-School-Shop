{
	"info": {
		"_postman_id": "0aeb1c1e-dcc4-4da6-a82a-1f8f01ebc857",
		"name": "Server",
		"description": "Test the routes of the backend and the database and the Error handling",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29410658"
	},
	"item": [
		{
			"name": "Barber",
			"item": [
				{
					"name": "Create Barber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response message is correct\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Barber created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test test\",\n  \"experties\": \"Yes\",\n  \"phone\": 1234567,\n  \"email\": \"test@test.com\",\n  \"password\": \"1234\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Service properties exist\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('description');",
									"    pm.expect(jsonData).to.have.property('price');",
									"    pm.expect(jsonData).to.have.property('duration');",
									"});",
									"",
									"pm.test(\"Resource created successfully and _id exists\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).to.be.ok;",
									"    pm.environment.set(\"createdResourceId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Service\",\n    \"description\": \"Test\",\n    \"price\": 200,\n    \"duration\": 24\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/services/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create an appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response has the expected properties\", function() {",
									"    var jsonData = pm.response.json().savedAppointment;",
									"    pm.expect(jsonData).to.have.property('confNumber');",
									"    pm.expect(jsonData).to.have.property('status').eql('Scheduled'); // default value",
									"    pm.expect(jsonData).to.have.property('price');",
									"    pm.expect(jsonData).to.have.property('date');",
									"    pm.expect(jsonData).to.have.property('barber').to.be.an('array');",
									"    pm.expect(jsonData).to.have.property('customer');",
									"    ",
									"    // Store confNumber for further tests",
									"    pm.environment.set(\"createdAppointmentConfNumber\", jsonData.confNumber);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 100,\n    \"date\": \"2023-11-10\",\n    \"message\": \"Optional Message\",\n    \"barber\": [1234567], \n    \"customer\": 9876543,\n    \"service\": [\"{{createdResourceId}}\"]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Barbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one Customer by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Returned barber has correct phone\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phone).to.eql(1234567);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/{{barberPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"{{barberPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit the barber information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Barber information is updated\", function() {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    var updatedPhone = pm.environment.get(\"updatedBarberPhone\");",
									"    pm.expect(jsonData.phone).to.eql(updatedPhone);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Micheal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/{{barberPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"{{barberPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post/ Edit availbility times",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Availability message is correct\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Availability updated successfully.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"date\": \"2023-10-20\",\n\t\"timeSlots\": [\n        {\n            \"startTime\": \"09:00\",\n            \"endTime\": \"10:00\"\n        },\n        {\n            \"startTime\": \"10:15\",\n            \"endTime\": \"11:15\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/availability/{{barberPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"availability",
								"{{barberPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post/ Get all availability times for the barber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/availability/{{barberPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"availability",
								"{{barberPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get/ Get availability for specific date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Returned data is correct\", function() {",
									"    var jsonData = pm.response.json();",
									"",
									"    if (pm.response.status === 404) {",
									"        pm.expect(jsonData.message).to.eql('Barber not found.');",
									"        return;",
									"    }",
									"",
									"    if (jsonData.hasOwnProperty('message') && jsonData.message.includes('No availability found for date')) {",
									"        pm.expect(jsonData.message).to.include('No availability found for date');",
									"    } else {",
									"        if (Array.isArray(jsonData)) {",
									"            jsonData = jsonData[0];",
									"        }",
									"        pm.expect(jsonData).to.have.property('date');",
									"        pm.expect(jsonData).to.have.property('timeSlots');",
									"        pm.expect(jsonData.timeSlots).to.be.an('array');",
									"        pm.expect(jsonData.timeSlots[0]).to.have.property('startTime');",
									"        pm.expect(jsonData.timeSlots[0]).to.have.property('endTime');",
									"    }",
									"});",
									"",
									"pm.test(\"No server errors\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.not.eql('Error fetching availability.');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/availability/{{barberPhone}}?date={{date}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"availability",
								"{{barberPhone}}"
							],
							"query": [
								{
									"key": "date",
									"value": "{{date}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get appointments on specific barber (relationship)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200 when appointments are retrieved\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/{{barberPhone}}/appointments",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"{{barberPhone}}",
								"appointments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all available times for all the barbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200 when availabilities are retrieved\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/allavailability/{{date}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"allavailability",
								"{{date}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete specific date for barber & timeSlot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200 when availability is deleted successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().message).to.equal(\"Availability deleted successfully.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/{{barberPhone}}/availability/{{date}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"{{barberPhone}}",
								"availability",
								"{{date}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete barber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms deletion\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Barber deleted\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/barbers/{{barberPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"barbers",
								"{{barberPhone}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test the endpoint of the barber routes"
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response has the admin data\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phone).to.be.a('number');",
									"    pm.expect(jsonData.password).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"admin\",\n\t\"phone\": 235325,\n\t\"email\": \"admin@test.com\",\n\t\"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All admins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response returns an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get admin by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response returns the correct admin\", function() {",
									"    var jsonData = pm.response.json();",
									"    var adminPhone = Number(pm.variables.get(\"adminPhone\"));",
									"    pm.expect(jsonData.phone).to.eql(adminPhone);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update admin info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Micheal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminPhone}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete admin account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms deletion success\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Admin deleted');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminPhone}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminPhone}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test hte endpoints of the admin routes"
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Create a customer account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response message is correct\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('User created successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"customer\",\n    \"phone\": 1234566,\n    \"email\": \"customer@customer.com\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a customer by the id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Correct admin is returned\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phone).to.eql(1234566);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/{{customerPhoen}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{customerPhoen}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the customer info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gustav\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/{{customerPhoen}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{customerPhoen}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create appointment from the customer endpoint (relationship)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create a valid appointment\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 100,\n    \"date\": \"2023-11-10\",\n    \"message\": \"Optional Message\",\n    \"barber\": [1234567], \n    \"customer\": 9876543\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/{{customerPhoen}}/appointments",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{customerPhoen}}",
								"appointments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms deletion\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"customer deleted\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/customers/{{customerPhoen}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"{{customerPhoen}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test the endpoints of the customer routes"
		},
		{
			"name": "Appointment",
			"item": [
				{
					"name": "Get all appointments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/{{createdAppointmentConfNumber}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"{{createdAppointmentConfNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service from the appointment route",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/{{createdAppointmentConfNumber}}/services/{{createdResourceId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"{{createdAppointmentConfNumber}}",
								"services",
								"{{createdResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms update\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Appointment status updated successfully!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Completed\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/{{createdAppointmentConfNumber}}/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"{{createdAppointmentConfNumber}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the service from the appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Service From Appointment\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().message).to.equal(\"Service removed from the appointment\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/{{createdAppointmentConfNumber}}/services/{{createdResourceId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"{{createdAppointmentConfNumber}}",
								"services",
								"{{createdResourceId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test the endpoints of the appointment routes"
		},
		{
			"name": "Service",
			"item": [
				{
					"name": "Get all services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/services/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/services/{{createdResourceId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								"{{createdResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the service info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms update\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Updated successfully!\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/services/{{createdResourceId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								"{{createdResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a service",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/services/{{createdResourceId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"services",
								"{{createdResourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response confirms deletion\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Appointment deleted\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/appointments/{{createdAppointmentConfNumber}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"{{createdAppointmentConfNumber}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test the endpoints of the service routes"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "barberPhone",
			"value": "1234567",
			"type": "string"
		},
		{
			"key": "adminPhone",
			"value": "235325",
			"type": "string"
		},
		{
			"key": "date",
			"value": "2023-10-20",
			"type": "string"
		},
		{
			"key": "customerPhoen",
			"value": "1234566",
			"type": "string"
		},
		{
			"key": "service",
			"value": "651639cc272cb522f7a70aa3",
			"type": "string"
		}
	]
}